create database Sales;
use Sales;
create table Customers(
id int primary key auto_increment,
first_name varchar(32),
last_name varchar(32),
email varchar(40),
phone varchar(16));

create table Products(
id int primary key auto_increment,
name varchar(32),
unit_price int,
description varchar(256));


create table Orders(
id int primary key auto_increment,
order_date date,
customer_id int,
product_id int,
foreign key(customer_id)references Customers(id),
foreign key(product_id)references Products(id));


-- 1. Insert at least five customers, five products, and ten orders into the respective tables. Make sure that at least 
-- two customers have multiple orders, and at least two  products are included in multiple orders.
INSERT INTO customers (first_name, last_name, email, phone)
VALUES
  ( 'John', 'Doe', 'johndoe@example.com', '555-1234'),
  ('Jane', 'Doe', 'janedoe@example.com', '555-5678'),
  ('Bob', 'Smith', 'bobsmith@example.com', '555-9876'),
  ('Alice', 'Johnson', 'alicejohnson@example.com', '555-4321'),
  ('Charlie', 'Brown', 'charliebrown@example.com', '555-8765');
  
INSERT INTO products (name, unit_price, description)
VALUES
  ('Widget', 10.99, 'A small widget'),
  ('pen', 19.99, 'write smoothly'),
  ('mobile', 5.99, 'long battery life'),
  ('laptop', 8.99, 'macbook pro'),
  ('bottle', 14.99, '24 hour warm');

INSERT INTO orders (order_date, customer_id, product_id)
VALUES
  ('2022-02-01', 1, 1),
  ('2022-02-02', 2, 2),
  ('2022-02-03', 3, 1),
  ('2022-02-04', 4, 3),
  ('2022-02-05', 5, 2),
  ('2022-02-06', 1, 4),
  ('2022-02-07', 3, 1),
  ('2022-02-08', 2, 2),
  ('2022-02-09', 1, 5),
  ('2022-02-10', 2, 2);
  
  
-- 2. Write a query that retrieves the customer's first name, last name, email, and the number of orders they have placed. 
-- The results should be ordered by the number of orders in descending order.

select c.first_name, c.last_name,c.email, count(o.customer_id) as number_of_orders
from customers c
join orders o
on c.id = o.customer_id
group by o.customer_id
order by number_of_orders desc
;
-- 3. Write a query that retrieves the product name, the total number of orders for each product, 
-- and the total revenue generated by each product. 
-- The results should be ordered by the total revenue in descending order.


select p.name, count(o.product_id) as number_of_order, sum(p.unit_price) as total
from Products p
join Orders o
on p.id = o.product_id
group by o.product_id
order by number_of_order desc;


-- 4. Write a query that retrieves the first name, last name, email, and product name for each order. 
-- The results should only include orders where the customer has placed multiple orders.
select c.first_name, c.last_name,c.email,  p.name
from orders o 
join customers c
on c.id = o.customer_id
join products p
on p.id = o.product_id
where c.id in (
				select customer_id 
                from orders
                group by customer_id
                having count(*)>1

				);
-- 5. Write a query that retrieves the first name, last name, and email for each customer
--  who has placed at least one order for a product with a unit price greater than $50.

select c.first_name, c.last_name,c.email
from customers c
join orders o
on c.id = o.customer_id
join products p 
on p.id = o.customer_id
where p.unit_price>50;


-- 6. Write a query that retrieves the product name and the number of times it has been ordered,
--    but only includes products that have been ordered more than once.

select p.name, count(o.product_id) as number_of_orders
from products p
join orders o 
on p.id =o.product_id
group by o.product_id
having count(o.product_id)>1;










-- 6. Write a query that retrieves the product name and the number of times it has been ordered, 
-- but only includes products that have been ordered more than once.








